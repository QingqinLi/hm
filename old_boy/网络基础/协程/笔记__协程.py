"""
协程：
    在单线程内实现并发的效果
    因为CPython有GIL锁，限制了统一时间点，只能执行一个线程，所以想要在执行一个线程的期间，充分利用CPU的性能，才回想在单线程内实现并发的效果
    并发：切换 + 保存状态
    CPU切换的原因：
        时间片用完
        程序阻塞  --- 解决这个问题才能提高效率
    要想实现单线程的并发，就要解决在单线程内，多个任务函数中，某个任务遇见IO操作，马上自动切换到其他任务函数去执行

    协程：是一个比线程更轻量级的单位，是组成线程的各个函数，协程本身是没有实体的，是用户自己去调度的
        greenlet模块：
            实现在某函数内部遇到IO曹祖，就自动切换到其他函数内部去执行
            g = gevent.spawn(func, args) 注册函数func， 返回一个对象g
            gevent.join() 等待g指向的函数func执行完毕，在执行过程中遇到IO就切换
            gevent.joinall([g1,g2,g3]) 等待全部函数执行完毕

    IO多路复用：
        阻塞IO
        非阻塞IO
        多路复用IO
        异步IO python无法实现。tornado框架，天生自带异步

"""